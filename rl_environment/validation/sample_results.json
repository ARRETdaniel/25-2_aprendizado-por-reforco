{
  "summary": {
    "timestamp": "2025-08-15T12:00:00Z",
    "duration": 120.5,
    "passed": 18,
    "failed": 2,
    "total_tests": 20,
    "overall_passed": false,
    "environment_info": {
      "python_version": "3.8.10",
      "carla_version": "0.8.4 (Coursera modified)",
      "carla_mode": "synchronous"
    }
  },
  "tests": {
    "init_environment_creation": {
      "passed": true,
      "details": {
        "message": "Successfully created environment wrapper"
      },
      "duration": 0.42
    },
    "init_carla_connection": {
      "passed": true,
      "details": {
        "message": "Successfully connected to CARLA server",
        "server_info": {
          "host": "localhost",
          "port": 2000
        }
      },
      "duration": 1.23
    },
    "init_action_space": {
      "passed": true,
      "details": {
        "message": "Action space correctly defined",
        "space_type": "Box",
        "space_shape": [2],
        "space_low": [-1.0, -1.0],
        "space_high": [1.0, 1.0]
      },
      "duration": 0.05
    },
    "init_observation_space": {
      "passed": true,
      "details": {
        "message": "Observation space correctly defined",
        "space_type": "Dict",
        "image_space_shape": [84, 84, 3],
        "vector_space_shape": [6]
      },
      "duration": 0.08
    },
    "reset_initial_state": {
      "passed": true,
      "details": {
        "message": "Reset returns correct initial state format",
        "has_image": true,
        "has_vector": true,
        "vector_size": 6
      },
      "duration": 2.45
    },
    "reset_vehicle_position": {
      "passed": true,
      "details": {
        "message": "Vehicle positioned correctly after reset",
        "position": [102.4, 58.9, 0.2]
      },
      "duration": 2.12
    },
    "reset_consistent_outputs": {
      "passed": true,
      "details": {
        "message": "Reset returns consistent observation structures across multiple calls",
        "reset_count": 5,
        "variance": "low"
      },
      "duration": 10.78
    },
    "action_throttle_response": {
      "passed": true,
      "details": {
        "message": "Vehicle responds correctly to throttle actions",
        "speed_increase_observed": true
      },
      "duration": 3.45
    },
    "action_steering_response": {
      "passed": true,
      "details": {
        "message": "Vehicle responds correctly to steering actions",
        "direction_change_observed": true
      },
      "duration": 3.78
    },
    "action_continuous_validity": {
      "passed": true,
      "details": {
        "message": "Action space correctly handles continuous values in specified range",
        "test_actions": [
          [0.5, 0.2],
          [-0.3, 0.8],
          [0.0, -0.5]
        ]
      },
      "duration": 4.12
    },
    "step_observation_format": {
      "passed": true,
      "details": {
        "message": "Step returns observations in correct format",
        "has_image": true,
        "has_vector": true
      },
      "duration": 1.56
    },
    "step_reward_range": {
      "passed": true,
      "details": {
        "message": "Rewards within expected range",
        "min_reward": -10.0,
        "max_reward": 2.5,
        "avg_reward": -0.8
      },
      "duration": 1.23
    },
    "step_done_flag": {
      "passed": true,
      "details": {
        "message": "Done flag correctly set on collisions and goal achievement",
        "collision_test": true,
        "goal_reached_test": true
      },
      "duration": 5.67
    },
    "step_info_contents": {
      "passed": false,
      "details": {
        "error": "Missing 'distance_to_goal' in info dictionary",
        "expected_keys": [
          "speed",
          "distance_traveled",
          "distance_to_goal",
          "collision_intensity"
        ],
        "actual_keys": ["speed", "distance_traveled", "collision_intensity"]
      },
      "duration": 1.34
    },
    "reward_progress_component": {
      "passed": true,
      "details": {
        "message": "Progress component of reward function correctly calculated",
        "reward_increases_with_progress": true
      },
      "duration": 2.45
    },
    "reward_collision_penalty": {
      "passed": true,
      "details": {
        "message": "Collision penalties correctly applied",
        "penalty_proportional_to_intensity": true
      },
      "duration": 3.12
    },
    "reward_consistency": {
      "passed": true,
      "details": {
        "message": "Reward function consistent across multiple runs",
        "variance": "acceptable"
      },
      "duration": 4.56
    },
    "termination_collision_detection": {
      "passed": true,
      "details": {
        "message": "Episode correctly terminates on vehicle collision",
        "collision_types_tested": ["vehicle", "pedestrian", "static"]
      },
      "duration": 5.78
    },
    "termination_goal_detection": {
      "passed": false,
      "details": {
        "error": "Episode does not consistently terminate when goal reached",
        "success_rate": "60%"
      },
      "duration": 6.23
    },
    "cleanup_resources": {
      "passed": true,
      "details": {
        "message": "All resources properly released on environment close",
        "memory_leak": "none detected"
      },
      "duration": 1.45
    }
  },
  "performance": {
    "reset_time": {
      "mean": 2.4,
      "std": 0.5,
      "min": 1.8,
      "max": 3.1
    },
    "step_time": {
      "mean": 0.08,
      "std": 0.02,
      "min": 0.05,
      "max": 0.12
    },
    "memory": {
      "peak_mb": 1245.8
    }
  }
}
